<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.newdraft.mapper.ProgramsMapper">
    <insert id="addPrograms" >
        INSERT INTO programs (program_title,country,program_info,program_require,program_phone,program_level) VALUES(#{programs.programTitle},#{programs.country},#{programs.programInfo},#{programs.programRequire},#{programs.programPhone},#{programs.programLevel})
    </insert>

    <update id="updatePrograms">
        update programs set program_title=#{programs.programTitle},country=#{programs.country},program_info=#{programs.programInfo},program_require=#{programs.programRequire},program_phone=#{programs.programPhone},program_level=#{programs.programLevel} where program_id=#{programs.programId}
    </update>

    <select id="getProgramsById" resultMap="programs">
        select * from programs where program_id =#{id}
    </select>

    <resultMap id="programs" type="com.example.newdraft.model.pojo.Programs">
        <id property="programId" column="program_id"></id>
        <result property="programTitle" column="program_title"></result>
        <result property="country" column="country"></result>
        <result property="programInfo" column="program_info"></result>
        <result property="programRequire" column="program_require"></result>
        <result property="programPhone" column="program_phone"></result>
        <result property="programLevel" column="program_level"></result>
        <result property="programStatus" column="program_status"></result>
    </resultMap>

    <!--  ==========分隔线==========  -->

    <select id="searchPrograms" resultMap="programs">
        SELECT * FROM programs WHERE program_status = 1
        <if test="map.programTitle!=null and map.programTitle!=''">
            AND program_title LIKE '%${map.programTitle}%'
        </if>
        <if test="map.country!=null and map.country!=''">
            AND country LIKE '%${map.country}%'
        </if>
        ORDER BY program_level DESC
        LIMIT #{map.index}, #{map.limit}
    </select>

    <select id="searchProgramInfo" resultMap="programsVo">
        SELECT p.*, GROUP_CONCAT(u.user_name) as `names`, GROUP_CONCAT(f.link) as links
        FROM programs p, mid_program_firm mpf, firms f, users u
        WHERE p.program_id = mpf.project_id AND mpf.firm_id = f.firm_id AND f.user_id = u.id
        AND p.program_status = 1 AND u.user_role = 2 AND u.user_status = 1
        <if test="programId!=null and programId>0">
            AND p.program_id = #{programId}
        </if>
        GROUP BY mpf.project_id
    </select>

    <select id="selectAllProgramsCount" resultType="java.lang.Long">
        SELECT COUNT(program_id) FROM programs WHERE program_status = 1
        <if test="map.programTitle!=null and map.programTitle!=''">
            AND program_title LIKE '%${map.programTitle}%'
        </if>
        <if test="map.country!=null and map.country!=''">
            AND country LIKE '%${map.country}%'
        </if>
    </select>

    <update id="deleteProgramById">
        UPDATE programs SET program_status = 2 WHERE program_id = #{programId}
    </update>
    <select id="queryProgramsCount"  resultType="int">
    SELECT COUNT(*) FROM `programs`;
</select>
    <resultMap id="programsVo" type="com.example.newdraft.model.vo.ProgramsVo">
        <id property="programId" column="program_id"/>
        <result property="programTitle" column="program_title"/>
        <result property="programInfo" column="program_info"/>
        <result property="country" column="country"/>
        <result property="programRequire" column="program_require"/>
        <result property="programPhone" column="program_phone"/>
        <collection property="firmNames" ofType="java.lang.String" javaType="java.util.List">
            <result column="names"/>
        </collection>
        <collection property="links" ofType="java.lang.String" javaType="java.util.List">
            <result column="links"/>
        </collection>
    </resultMap>
</mapper>